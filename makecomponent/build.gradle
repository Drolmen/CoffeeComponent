def isRunAlone = false
if(isRunAlone) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

def androidConfig = rootProject.ext.android
def dependenceConfig = rootProject.ext.dependencies
android {
    compileSdkVersion androidConfig.compileSdkVersion

    resourcePrefix "make_"

    defaultConfig {
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion

        if(isRunAlone) {
            applicationId "com.drolmen.makecomponent"
            versionCode 1
            versionName "1.0"
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
    }

    sourceSets {
        if (isRunAlone) {
            /**
             * 通过以下配置，可以使host下源代码、清单文件会与main/*自动合并，
             * 实现Module独立运行的效果
             */
            debug {
                java.srcDirs = ['src/main/java', 'src/host/java']
                manifest.srcFile 'src/host/AndroidManifest.xml'
            }

            release {
                java.srcDirs = ['src/main/java', 'src/host/java']
                manifest.srcFile 'src/host/AndroidManifest.xml'
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation dependenceConfig.v7
    implementation dependenceConfig.constranit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
